name: Create Release

on:
  push:
    branches:
      - main

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Check if zip is installed
      run: |
        if ! command -v zip &> /dev/null; then
          echo "zip is not installed. Installing..."
          sudo apt-get update
          sudo apt-get install zip -y
        fi

    - name: Run release script
      run: |
        chmod +x release.sh
        ./release.sh

    - name: Set up config
      run: |
        echo "RELEASE_TAG=$(cat release_config.yml | grep RELEASE_TAG | sed 's/.*: //')" >> $GITHUB_ENV
        echo "RELEASE_NAME=$(cat release_config.yml | grep RELEASE_NAME | sed 's/.*: //')" >> $GITHUB_ENV
        echo "RELEASE_DESCRIPTION=$(cat release_config.yml | grep RELEASE_DESCRIPTION | sed 's/.*: //')" >> $GITHUB_ENV
        echo "RELEASE_FILENAME=$(cat release_config.yml | grep RELEASE_FILENAME | sed 's/.*: //')" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_TAG }}
        release_name: ${{ env.RELEASE_NAME }}
        body: ${{ env.RELEASE_DESCRIPTION }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.RELEASE_FILENAME }}
        asset_name: ${{ env.RELEASE_FILENAME }}
        asset_content_type: application/zip
